DROP TABLE IF EXISTS users, films, films_genres, friends, likes, genres, mpa, reviews_ratings, reviews CASCADE;

CREATE TABLE IF NOT EXISTS mpa (
    mpa_id int PRIMARY KEY,
    name varchar
);

CREATE TABLE IF NOT EXISTS films (
    film_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar,
    description varchar(200),
    release_date date,
    duration int,
    mpa_id int REFERENCES mpa (mpa_id)
);

CREATE TABLE IF NOT EXISTS genres (
    genre_id int PRIMARY KEY,
    genre varchar
);

CREATE TABLE IF NOT EXISTS films_genres (
    film_id int REFERENCES films (film_id),
    genre_id int REFERENCES genres (genre_id)
);

CREATE TABLE IF NOT EXISTS users (
    user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar,
    login varchar,
    name varchar,
    birthday date
);

CREATE TABLE IF NOT EXISTS friends (
    user_id int REFERENCES users (user_id),
    friend_id int REFERENCES users (user_id)
);

CREATE TABLE IF NOT EXISTS likes (
    user_id int REFERENCES users (user_id),
    film_id int REFERENCES films (film_id)
);

CREATE TABLE IF NOT EXISTS reviews (
    review_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content varchar,
    is_positive boolean,
    user_id int REFERENCES users (user_id) ON DELETE CASCADE,
    film_id int REFERENCES films (film_id) ON DELETE CASCADE,
    useful int
);

CREATE TABLE IF NOT EXISTS review_ratings (
    review_id int REFERENCES reviews (review_id) ON DELETE CASCADE,
    user_id int REFERENCES users (user_id) ON DELETE CASCADE,
    is_positive boolean
);